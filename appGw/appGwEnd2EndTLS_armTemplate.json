{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "virtual network resource group"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "virtual network name"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "subnet1",
            "metadata": {
                "description": "Subnet Name"
            }
        },
        "applicationGatewayName": {
            "type": "string",
            "defaultValue": "applicationGateway1",
            "metadata": {
                "description": "application gateway name"
            }
        },
        "applicationGatewaySku": {
            "type": "string",
            "metadata": {
                "description": "application gateway sku size"
            },
            "defaultValue": "Standard_v2"
        },
        "applicationGatewayTier": {
            "type": "string",
            "metadata": {
                "description": "application gateway tier"
            },
            "defaultValue": "Standard_v2"
        },
        "applicationGatewayInstanceCount": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "application gateway instance count"
            }
        },
        "frontendPrivateIpAddress": {
            "type": "string",
            "metadata": {
                "description": "Frontend static private IP address"
            }
        },
        "frontendPublicIpAddressResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Public IP Address Resource Group"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "frontendPublicIpAddressName": {
            "type": "string",
            "metadata": {
                "description": "Public IP Address Name"
            }
        },
        "cookieBasedAffinity": {
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "defaultValue": "Disabled",
            "metadata": {
                "description": "cookie based affinity"
            }
        },
        "affinityCookieName": {
            "type": "string",
            "metadata": {
                "description": "affinity cookie name"
            },
            "defaultValue": "AppGatewayAffinityCookie"
        },
        "zones": {
            "type": "array",
            "metadata": {
                "description": "Availability zones to deploy in"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "backendSites": {
            "type": "array",
            "metadata": {
                "description": "Backend Http Settings Collection"
            }
        },
        "backendAddressPoolName": {
            "type": "string",
            "metadata": {
                "description": "Name of the backend address pool"
            },
            "defaultValue": "appGatewayBackendPool"
        },
        "backendPort": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "application gateway back end port"
            }
        },
        "backendProtocol": {
            "type": "string",
            "metadata": {
                "description": "Backend Protocol"
            },
            "defaultValue": "http",
            "allowedValues": [ "http", "https" ]
        },
        "privateListenername": {
            "type": "string",
            "metadata": {
                "description": "Private IP listener name"
            },
            "defaultValue": "appGatewayPrivateListener"
        },
        "publicListenername": {
            "type": "string",
            "metadata": {
                "description": "Public IP listener name"
            },
            "defaultValue": "appGatewayPublicListener"
        },
        "sslCertificatename": {
            "type": "string",
            "metadata": {
                "description": "SSL Certificate configuration name"
            },
            "defaultValue": "sslCertificate1"
        },
        "enableHttp2": {
            "type": "bool",
            "metadata": {
                "description": "Enable HTTP 2"
            },
            "defaultValue": false
        },
        "UserAssignedIdentityResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group of the User Assigned Identity the App Gateway will use to get the SSL certificate from Key Vault"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "UserAssignedIdentityName": {
            "type": "string",
            "metadata": {
                "description": "Name of the User Assigned Identity the App Gateway will use to get the SSL certificate from Key Vault"
            }
        },
        "keyvaultResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group of the Key Vault that holds the App Gateway SSL Certificate"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "keyvaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Key Vault that holds the App Gateway SSL Certificate"
            }
        },
        "certificateName": {
            "type": "string",
            "metadata": {
                "description": "Key Vault SSL Certificate Name"
            }
        },
        "certificateVersion": {
            "type": "string",
            "metadata": {
                "description": "Key Vault SSL Certificate Version"
            }
        },
        "trustedRootCaCertName": {
            "type": "string",
            "metadata": {
                "description": "Trusted Root Certification Authority Certificate Name"
            }
        },
        "trustedRootCaCertData": {
            "type": "string",
            "metadata": {
                "description": "Trusted Root Certification Authority Certificate Public Data"
            }
        }
    },
    "variables": {
        "subnetRef": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "publicIPRef": "[resourceId(parameters('frontendPublicIpAddressResourceGroup'), 'Microsoft.Network/publicIPAddresses', parameters('frontendPublicIpAddressName'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-07-01",
            "name": "[parameters('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "location": "[parameters('location')]",
            "zones": "[parameters('zones')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId(parameters('UserAssignedIdentityResourceGroup'), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('UserAssignedIdentityName'))]": {}
                }
            },
            "properties": {
                "sku": {
                    "name": "[parameters('applicationGatewaySku')]",
                    "tier": "[parameters('applicationGatewayTier')]",
                    "capacity": "[parameters('applicationGatewayInstanceCount')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "publicIpFrontend",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPRef')]"
                            }
                        }
                    },
                    {
                        "name": "privateIpFrontend",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAddress": "[parameters('frontendPrivateIpAddress')]",
                            "privateIPAllocationMethod": "Static"
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "privateFrontendPort",
                        "properties": {
                            "Port": 80
                        }
                    },
                    {
                        "name": "publicFrontendPort",
                        "properties": {
                            "Port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('backendAddressPoolName')]",
                        "properties": {
                            "BackendAddresses": ""
                        }
                    }
                ],
                "enableHttp2": "[parameters('enableHttp2')]",
                "sslCertificates": [
                    {
                        "name": "[parameters('sslCertificateName')]",
                        "properties": {
                            "keyVaultSecretId": "[concat(reference(resourceId(parameters('keyvaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyvaultName')), '2019-09-01', 'full').properties.vaultUri, 'secrets/', parameters('certificateName'), '/', parameters('certificateVersion'))]"
                        }
                    }
                ],
                "trustedRootCertificates": [
                    {
                        "name": "[parameters('trustedRootCaCertName')]",
                        "properties": {
                            "data": "[parameters('trustedRootCaCertData')]"
                        }
                    }
                ],
                "copy": [
                    {
                        "name": "backendHttpSettingsCollection",
                        "count": "[length(parameters('backendSites'))]",
                        "input": {
                            "name": "[concat(parameters('backendSites')[copyIndex('backendHttpSettingsCollection')].siteName, 'BackendHttpBinding')]",
                            "properties": {
                                "Port": "[parameters('backendPort')]",
                                "Protocol": "[parameters('backendProtocol')]",
                                "CookieBasedAffinity": "[parameters('cookieBasedAffinity')]",
                                "affinityCookieName": "[parameters('affinityCookieName')]",
                                "hostName": "[parameters('backendSites')[copyIndex('backendHttpSettingsCollection')].hostName]",
                                "probe": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/probes/', parameters('backendSites')[copyIndex('backendHttpSettingsCollection')].siteName, 'Probe')]"
                                },
                                "trustedRootCertificates": [
                                    {
                                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/trustedRootCertificates/', parameters('trustedRootCaCertName'))]"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "probes",
                        "count": "[length(parameters('backendSites'))]",
                        "input": {
                            "name": "[concat(parameters('backendSites')[copyIndex('probes')].siteName, 'Probe')]",
                            "properties": {
                                "backendHttpSettings": [
                                    {
                                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/', parameters('backendSites')[copyIndex('probes')].siteName, 'BackendHttpBinding')]"
                                    }
                                ],
                                "interval": 30,
                                "minServers": 0,
                                "path": "/",
                                "protocol": "[parameters('backendProtocol')]",
                                "timeout": 30,
                                "unhealthyThreshold": 3,
                                "pickHostNameFromBackendHttpSettings": false,
                                "host": "[parameters('backendSites')[copyIndex('probes')].hostName]"
                            }
                        }
                    },
                    {
                        "name": "httpListeners",
                        "count": "[length(parameters('backendSites'))]",
                        "input": {
                            "name": "[concat(parameters('backendSites')[copyIndex('httpListeners')].siteName, 'PublicListener')]",
                            "properties": {
                                "frontendIPConfiguration": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/publicIpFrontend')]"
                                },
                                "frontendPort": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/publicFrontendPort')]"
                                },
                                "protocol": "Https",
                                "sslCertificate": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/sslCertificates/', parameters('sslCertificateName'))]"
                                },
                                "hostName": "[parameters('backendSites')[copyIndex('httpListeners')].hostName]",
                                "requireServerNameIndication": true
                            }
                        }
                    },
                    {
                        "name": "requestRoutingRules",
                        "count": "[length(parameters('backendSites'))]",
                        "input": {
                            "name": "[concat(parameters('backendSites')[copyIndex('requestRoutingRules')].siteName, 'RoutingRule')]",
                            "properties": {
                                "RuleType": "Basic",
                                "httpListener": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/', parameters('backendSites')[copyIndex('requestRoutingRules')].siteName, 'PublicListener')]"
                                },
                                "backendAddressPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/', parameters('backendAddressPoolName'))]"
                                },
                                "backendHttpSettings": {
                                    "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/', parameters('backendSites')[copyIndex('requestRoutingRules')].siteName, 'BackendHttpBinding')]"
                                }
                            }
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {}
}