{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "RegionPrefix": {
            "type": "string",
            "metadata": {
                "description": "Region prefix to include in the VM name(s)."
            }
        },
        "EnterprisePrefix": {
            "type": "string",
            "metadata": {
                "description": "Enterprise prefix."
            }
        },
        "ApplicationPrefix": {
            "type": "string",
            "metadata": {
                "description": "Application prefix The VM name starts with."
            }
        },
        "EnvironmentPrefix": {
            "type": "string",
            "metadata": {
                "description": "Environment prefix to include in the VM name(s)."
            },
            "maxLength": 1
        },
        "SubscriptionOrdinalPrefix": {
            "type": "string",
            "metadata": {
                "description": "Subscription ordinal prefix for the environment the VM is in."
            }
        },
        "vmComponentPrefix": {
            "type": "string",
            "maxLength": 6,
            "metadata": {
                "description": "Short prefix that describes the VM purpose, to include in the VM name(s)."
            }
        },
        "vmIncrementPrefixes": {
            "type": "array",
            "metadata": {
                "description": "Increment prefixes to end the VM names with."
            },
            "defaultValue": []
        },
        "vmCount": {
            "type": "int",
            "metadata": {
                "description": "Number of VMs to deploy."
            },
            "defaultValue": 1
        },
        "vnetSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VNET subnet to attach the VM NIC to."
            }
        },
        "staticIpAddresses": {
            "type": "array",
            "metadata": {
                "description": "Array of available static IP addresses to assign to the VM NICs. Defaults to dynamic."
            },
            "defaultValue": []
        },
        "dnsServers": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "VM NIC DNS Servers. Defaults to VNET's DNS servers."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "VM Size SKU."
            }
        },
        "ImagePublisher": {
            "type": "string",
            "metadata": {
                "description": "VM Image Publisher, for instance 'MicrosoftWindowsServer'"
            }
        },
        "ImageOffer": {
            "type": "string",
            "metadata": {
                "description": "VM Image Offer, for instance 'WindowsServer'"
            }
        },
        "ImageSKU": {
            "type": "string",
            "metadata": {
                "description": "VM Image SKU, for intance '2019-Datacenter'"
            }
        },
        "ImageVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "VM Image version"
            }
        },
        "OSDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "VM OS Disk Type"
            }
        },
        "OSDiskCache": {
            "type": "string",
            "defaultValue": "ReadWrite",
            "allowedValues": [
                "none",
                "ReadOnly",
                "ReadWrite"
            ],
            "metadata": {
                "description": "VM OS Disk Caching Setting"
            }
        },
        "OSDiskSize": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "VM OS Disk Size. Defaults to image size."
            }
        },
        "dataDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "VM Data Disk Type"
            }
        },
        "dataDiskCache": {
            "type": "string",
            "defaultValue": "ReadWrite",
            "allowedValues": [
                "none",
                "ReadOnly",
                "ReadWrite"
            ],
            "metadata": {
                "description": "VM Data Disk Caching Setting"
            }
        },
        "dataDiskSizes": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "VM Data Disk Size(s) array. Specify as many sizes as there should be data disks. Defaults to none."
            }
        },
        "localAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "VM Local Administrator Username"
            }
        },
        "hubSubId": {
            "type": "string",
            "metadata": {
                "description": "Specify the Hub subscription ID."
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "customScriptStorageResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of the Storage Account that host custom script extension files"
            }
        },
        "customScriptStorageAccount": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Storage Account that host custom script extension files"
            }
        },
        "customScriptStorageContainer": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Storage Account Container that contains custom script extension files"
            }
        },
        "customScriptFiles": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Array of files the custom script extension is to download from the storage account"
            }
        },
        "customScriptCommand": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Command the custom script extension is to run"
            }
        },
        "customScriptTimeStamp": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Timestamp the custom script extension is to run with. Script will run again if timestamp is greater than that of previous deployment"
            }
        },
        "logAnalyticsWorkspaceResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group of the Log Analytics Workspace diagnostics logs get sent to."
            }
        },
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name Group of the Log Analytics Workspace diagnostics logs get sent to."
            }
        },
        "automationAccountResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group of the Automation account to attach the VM(s) to."
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name Group of the Automation account to attach the VM(s) to."
            }
        },
        "dscConfigurationMode": {
            "type": "string",
            "defaultValue": "ApplyAndMonitor",
            "allowedValues": [
                "ApplyOnly",
                "ApplyAndMonitor",
                "ApplyAndAutoCorrect"
            ],
            "metadata": {
                "description": "DSC Configuration mode."
            }
        },
        "dscConfigurationName": {
            "type": "string",
            "metadata": {
                "description": "Name of the DSC Configuration to apply to the VM(s)."
            },
            "defaultValue": "TZFW.localhost"
        },
        "adDomainFqdn": {
            "type": "string",
            "metadata": {
                "description": "Fully Qualified Domain Name of the Active Directory domain to join."
            }
        },
        "adDomainJoinUsername": {
            "type": "string",
            "metadata": {
                "description": "Username authorized to perform Active Directory domain join."
            }
        },
        "hubKeyVaultRgp": {
            "type": "string",
            "metadata": {
                "description": "Resource Group of the Hub Key Vault that contains the domain join account."
            }
        },
        "hubKeyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Hub Key Vault that contains the domain join account."
            }
        },
        "adOuPath": {
            "type": "string",
            "metadata": {
                "description": "Active Directory Organizational Unit to locate the computer account in."
            },
            "defaultValue": ""
        },
        "encryptionVolumeType": {
            "type": "string",
            "allowedValues": [
                "None",
                "OS",
                "Data",
                "All"
            ],
            "metadata": {
                "description": "Volumes to encrypt."
            },
            "defaultValue": "None"
        },
        "encryptionResizeOSDisk": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "disk encryption resize OS disk before encryption."
            }
        },
        "encryptionKekUri": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Uri of Key Vault Key for KEK disk encryption."
            }
        },
        "componentTag": {
            "type": "string",
            "metadata": {
                "description": "Component tag"
            }
        },
        "applicationTag": {
            "type": "string",
            "metadata": {
                "description": "Application tag"
            }
        },
        "environmentTag": {
            "type": "string",
            "metadata": {
                "description": "Environment Resource Tag"
            },
            "allowedValues": [
                "Core",
                "Dev",
                "Test",
                "Lab"
            ]
        },
        "availabilitySet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Whether or not to build the VM(s) in an Availability Set"
            }
        },
        "domainjoin": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Whether or not to Join the VM(s) to the AD Domain"
            }
        },
        "localAdminPublicKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "authentication public key for Linux VMs."
            }
        }
    },
    "variables": {
        "linkedTemplateContainerUri": "https://raw.githubusercontent.com/FabienGilbert/AzureHub/master/linkedTemplates",
        "leftPrefix": "[concat(parameters('EnterprisePrefix'), '-', parameters('RegionPrefix'), '-', parameters('EnvironmentPrefix'), '-')]",
        "netRgp": "[concat(variables('leftPrefix'),'NET-RGP-',parameters('SubscriptionOrdinalPrefix'))]",
        "akvRgp": "[concat(variables('leftPrefix'),'AKV-RGP-',parameters('SubscriptionOrdinalPrefix'))]",
        "vnetName": "[concat(variables('leftPrefix'),'VNET-',parameters('SubscriptionOrdinalPrefix'),'-01')]",
        "keyVaultName": "[concat(variables('leftPrefix'),'AKV-',parameters('SubscriptionOrdinalPrefix'),'-01')]",
        "avSetName": "[concat(variables('leftPrefix'), parameters('vmComponentPrefix'), '-AVS-', parameters('SubscriptionOrdinalPrefix'),'-01')]",
        "automationExtTemplateUri": "[if(contains(parameters('ImagePublisher'),'Microsoft'), concat(variables('linkedTemplateContainerUri'), '/vmAutomationExtWindows_armTemplate.json'), concat(variables('linkedTemplateContainerUri'), '/vmAutomationExtLinux_armTemplate.json'))]",
        "copy": [
            {
                "name": "vmArray",
                "count": "[parameters('vmCount')]",
                "input": {
                    "vmName": "[concat(parameters('ApplicationPrefix'), '-', parameters('vmComponentPrefix'), '-', parameters('EnvironmentPrefix'), '-', if(equals(parameters('vmIncrementPrefixes'),json('[]')), padLeft(add(copyIndex('vmArray'),1),2,'0'), parameters('vmIncrementPrefixes')[copyIndex('vmArray')]))]"
                }
            },
            {
                "name": "dataDisks",
                "count": "[length(parameters('dataDiskSizes'))]",
                "input": {
                    "type": "[parameters('dataDiskType')]",
                    "caching": "[parameters('dataDiskCache')]",
                    "sizeGb": "[parameters('dataDiskSizes')[copyIndex('dataDisks')]]"
                }
            }
        ]
    },
    "functions": [
        {
            "namespace": "vmfunc",
            "members": {
                "keyVaultSecretRef": {
                    "parameters": [
                        {
                            "name": "vaultSub",
                            "type": "string"
                        },
                        {
                            "name": "vaultRgp",
                            "type": "string"
                        },
                        {
                            "name": "vaultName",
                            "type": "string"
                        },
                        {
                            "name": "secretName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "object",
                        "value": {
                            "keyVault": {
                                "id": "[concat('/subscriptions/', parameters('vaultSub'), '/resourceGroups/', parameters('vaultRgp'), '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
                            },
                            "secretName": "[parameters('secretName')]"
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "name": "[concat('avSet_', variables('avSetName'))]",
            "condition": "[equals(parameters('availabilitySet'), json('true'))]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/availabilitySet_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AvailabilitySetName": {
                        "value": "[variables('avSetName')]"
                    },
                    "tags": {
                        "value": {
                            "Component": "[concat('Availability Set - ', parameters('componentTag'))]",
                            "Application": "[parameters('applicationTag')]",
                            "Environment": "[parameters('environmentTag')]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('VM_', variables('vmArray')[copyIndex()].vmName)]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('avSet_', variables('avSetName'))]"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmloop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/vm_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('vmArray')[copyIndex()].vmName]"
                    },
                    "VmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "ImagePublisher": {
                        "value": "[parameters('ImagePublisher')]"
                    },
                    "ImageOffer": {
                        "value": "[parameters('ImageOffer')]"
                    },
                    "ImageSKU": {
                        "value": "[parameters('ImageSKU')]"
                    },
                    "ImageVersion": {
                        "value": "[parameters('ImageVersion')]"
                    },
                    "OSDiskType": {
                        "value": "[parameters('OSDiskType')]"
                    },
                    "OSDiskCache": {
                        "value": "[parameters('OSDiskCache')]"
                    },
                    "OSDiskSize": {
                        "value": "[parameters('OSDiskSize')]"
                    },
                    "VmDataDisks": {
                        "value": "[if(equals(parameters('dataDiskSizes'), json('[]')), json('[]'), variables('dataDisks'))]"
                    },
                    "VmSubnet": {
                        "value": "[parameters('vnetSubnetName')]"
                    },
                    "VNETResourceGroup": {
                        "value": "[variables('netRgp')]"
                    },
                    "VNETName": {
                        "value": "[variables('vnetName')]"
                    },
                    "VmIpAddress": {
                        "value": "[if(equals(parameters('staticIpAddresses'), json('[]')), '', parameters('staticIpAddresses')[copyIndex()])]"
                    },
                    "localAdminUsername": {
                        "value": "[parameters('localAdminUsername')]"
                    },
                    "localAdminPassword": {
                        "[if(equals(parameters('localAdminPublicKey'), ''), 'reference', 'value')]": "[if(equals(parameters('localAdminPublicKey'), ''), vmfunc.keyVaultSecretRef(subscription().subscriptionId, variables('akvRgp'), variables('keyVaultName'), parameters('localAdminUsername')), '')]"
                    },
                    "localAdminPublicKey": {
                        "value": "[parameters('localAdminPublicKey')]"
                    },
                    "availabilitySetName": {
                        "value": "[if(equals(parameters('availabilitySet'), json('true')), variables('avSetName') , '')]"
                    },
                    "tags": {
                        "value": {
                            "Component": "[parameters('componentTag')]",
                            "Application": "[parameters('applicationTag')]",
                            "Environment": "[parameters('environmentTag')]"
                        }
                    },
                    "dnsServers": {
                        "value": "[parameters('dnsServers')]"
                    }
                }
            }
        },
        {
            "condition": "[not(equals(parameters('customScriptCommand'), ''))]",
            "name": "[concat('vmCustomScript_', variables('vmArray')[copyIndex('vmCustomScriptLoop')].vmName)]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "vmLoop"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmCustomScriptLoop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/vmCustomScriptExtension_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('vmArray')[copyIndex('vmCustomScriptLoop')].vmName]"
                    },
                    "configStorageSubcriptionId": {
                        "value": "[parameters('hubSubId')]"
                    },
                    "configStorageResourceGroup": {
                        "value": "[parameters('customScriptStorageResourceGroup')]"
                    },
                    "configStorageAccount": {
                        "value": "[parameters('customScriptStorageAccount')]"
                    },
                    "configStorageContainer": {
                        "value": "[parameters('customScriptStorageContainer')]"
                    },
                    "customScriptFiles": {
                        "value": "[parameters('customScriptFiles')]"
                    },
                    "customScriptCommand": {
                        "value": "[parameters('customScriptCommand')]"
                    },
                    "customScriptTimeStamp": {
                        "value": "[parameters('customScriptTimeStamp')]"
                    }
                }
            }
        },
        {
            "name": "[concat('vmDomainJoin_', variables('vmArray')[copyIndex()].vmName)]",
            "condition": "[equals(parameters('domainjoin'), json('true'))]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [                
                "vmloop",
                "vmCustomScriptLoop"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmDomainJoinLoop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/vmDomainJoin_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('vmArray')[copyIndex()].vmName]"
                    },
                    "domainToJoin": {
                        "value": "[parameters('adDomainFqdn')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('adDomainJoinUsername')]"
                    },
                    "domainPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[concat('/subscriptions/', parameters('hubSubId'), '/resourceGroups/', parameters('hubKeyVaultRgp'), '/providers/Microsoft.KeyVault/vaults/', parameters('hubKeyVaultName'))]"
                            },
                            "secretName": "[parameters('adDomainJoinUsername')]"
                        }
                    },
                    "ouPath": {
                        "value": "[parameters('adOuPath')]"
                    }
                }
            }
        },
        {
            "name": "[concat('vmAutomation_', variables('vmArray')[copyIndex()].vmName)]",
            "condition": "[not(equals(parameters('automationAccountName'),''))]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "vmDomainJoinLoop"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmAutomationLoop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('automationExtTemplateUri'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "autoAccountSubscription": {
                        "value": "[parameters('hubSubId')]"
                    },
                    "autoAccountResourceGroup": {
                        "value": "[parameters('automationAccountResourceGroup')]"
                    },
                    "autoAccountName": {
                        "value": "[parameters('automationAccountName')]"
                    },
                    "VmName": {
                        "value": "[variables('vmArray')[copyIndex()].vmName]"
                    },
                    "nodeConfigurationName": {
                        "value": "[parameters('dscConfigurationName')]"
                    },
                    "configurationMode": {
                        "value": "[parameters('dscConfigurationMode')]"
                    }
                }
            }
        },
        {
            "name": "[concat('vmLogExtension_', variables('vmArray')[copyIndex()].vmName)]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "vmAutomationLoop"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmLogLoop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/vmLogAnalyticsAgent_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceSubscription": {
                        "value": "[parameters('hubSubId')]"
                    },
                    "workspaceResourceGroup": {
                        "value": "[parameters('logAnalyticsWorkspaceResourceGroup')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    },
                    "vmName": {
                        "value": "[variables('vmArray')[copyIndex()].vmName]"
                    },
                    "operatingSystem": {
                        "value": "[if(contains(parameters('ImagePublisher'),'Microsoft'),'windows','linux')]"
                    }
                }
            }
        },
        {
            "name": "[concat('vmNetworkwatcher_', variables('vmArray')[copyIndex()].vmName)]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [                
                "vmLogLoop"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmNetworkwatcherLoop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/vmNetworkWatcher_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('vmArray')[copyIndex()].vmName]"
                    },
                    "operatingSystem": {
                        "value": "[if(contains(parameters('ImagePublisher'),'Microsoft'),'windows','linux')]"
                    }
                }
            }
        },
        {
            "name": "[concat('vmDiskEncryption_', variables('vmArray')[copyIndex()].vmName)]",
            "condition": "[not(equals(parameters('encryptionVolumeType'), 'None'))]",
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "vmNetworkwatcherLoop"
            ],
            "copy": {
                "count": "[parameters('vmCount')]",
                "name": "vmDiskEncryptionLoop"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('linkedTemplateContainerUri'), '/vmDiskEncryption_armTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('vmArray')[copyIndex()].vmName]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[variables('akvRgp')]"
                    },
                    "EncryptionVolumeType": {
                        "value": "[parameters('encryptionVolumeType')]"
                    },
                    "useExistingKek": {
                        "value": "[if(equals(parameters('encryptionKekUri'),''), 'nokek', 'kek')]"
                    },
                    "keyEncryptionKeyURL": {
                        "value": "[parameters('encryptionKekUri')]"
                    },
                    "resizeOSDisk": {
                        "value": "[parameters('encryptionResizeOSDisk')]"
                    }
                }
            }
        }
    ]
}