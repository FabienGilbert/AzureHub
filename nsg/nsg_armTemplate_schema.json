{
  "id": "https://raw.githubusercontent.com/FabienGilbert/AzureHub/master/nsg/nsg_armTemplate_schema.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "NSG Template at subscription scope",
  "description": "A Network Security Group deployment template at subscription scope",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON schema reference"
    },
    "contentVersion": {
      "type": "string",
      "pattern": "(^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$)",
      "description": "A 4 number format for the version number of this template file. For example, 1.0.0.0"
    },
    "parameters": {
      "type": "object",
      "description": "Input parameter definitions",
      "additionalProperties": {
        "$ref": "#/definitions/parameter"
      }
    },
    "variables": {
      "type": "object",
      "description": "Variable definitions",
      "properties": {
        "securityRules": {
          "type": "object",
          "description": "Network Security Group Security Rules",
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "properties": {
                  "direction": {
                    "type": "string",
                    "enum": [
                      "inbound",
                      "outbound"
                    ],
                    "description": "Traffic direction this rule is to apply on"
                  },
                  "priority": {
                    "type": "integer",
                    "minimum": 100,
                    "maximum": 4096,
                    "description": "Rule Priority. Start at 200. Space them out by 10. Space deny rules by 500."
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 80,
                    "description": "Short rule name. Alphanumeric, hyphen, underscore, and period only.",
                    "pattern": "^[A-Za-z0-9]{1}[A-Za-z0-9-_.]*[A-Za-z_]{1}$"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of what the rule is for."
                  },
                  "access": {
                    "type": "string",
                    "enum": [
                      "allow",
                      "deny"
                    ],
                    "description": "allow or deny traffic."
                  },
                  "sourceAddressPrefix": {
                    "type": "string",
                    "description": "Either a single Source Address/Service Tag",
                    "examples": [
                      "Internet",
                      "VirtualNetwork",
                      "AzureLoadBalancer",
                      "10.184.226.0/27",
                      "*",
                      ""
                    ],
                    "default": ""
                  },
                  "sourceAddressPrefixes": {
                    "type": "array",
                    "description": "Or an array of several Source Addresses",
                    "default": [],
                    "examples": [
                      [
                        "10.184.226.0/27",
                        "10.184.228.0/27"
                      ]
                    ]
                  },
                  "sourceApplicationSecurityGroups": {
                    "type": "array",
                    "description": "SourceApplicationSecurityGroups",
                    "default": []
                  },
                  "destinationAddressPrefix": {
                    "type": "string",
                    "description": "Either a single Destination Address/Service Tag",
                    "examples": [
                      "Internet",
                      "VirtualNetwork",
                      "10.184.226.0/27",
                      "*",
                      ""
                    ],
                    "default": ""
                  },
                  "destinationAddressPrefixes": {
                    "type": "array",
                    "description": "Or an array of several Destination Addresses",
                    "default": [],
                    "examples": [
                      [
                        "10.184.226.0/27",
                        "10.184.228.0/27"
                      ]
                    ]
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Protocol the rule is applying on",
                    "enum": [
                      "tcp",
                      "udp",
                      "*"
                    ]
                  },
                  "sourcePortRange": {
                    "type": "string",
                    "description": "Either a single Source Port Range",
                    "default": "*",
                    "pattern": "^[0-9-*]*$",
                    "examples": [
                      "",
                      "5555",
                      "49152-65535"
                    ]
                  },
                  "sourcePortRanges": {
                    "type": "array",
                    "description": "Or an array of Source Port Ranges",
                    "default": [],
                    "items": {
                      "pattern": "^[0-9]{1}[0-9-]*$"
                    },
                    "examples": [
                      [
                        "5555",
                        "49152-65535"
                      ],
                      [
                        "6666",
                        "7777",
                        "1024-65535"
                      ]
                    ]
                  },
                  "destinationPortRange": {
                    "type": "string",
                    "description": "Either a single Destination Port Range",
                    "default": "*",
                    "pattern": "^[0-9-*]*$",
                    "examples": [
                      "443",
                      "49152-65535"
                    ]
                  },
                  "destinationPortRanges": {
                    "type": "array",
                    "description": "Or an array of Destination Port Ranges",
                    "default": [],
                    "items": {
                      "pattern": "^[0-9]{1}[0-9-]*$"
                    },
                    "examples": [
                      [
                        "3389",
                        "5985-5986"
                      ],
                      [
                        "53",
                        "88",
                        "135",
                        "137-139",
                        "389",
                        "445",
                        "464",
                        "636",
                        "3268",
                        "3269",
                        "49152-65535"
                      ]
                    ]
                  }
                },
                "required": [
                  "direction",
                  "priority",
                  "name",
                  "description",
                  "access",
                  "sourceAddressPrefix",
                  "sourceAddressPrefixes",
                  "destinationAddressPrefix",
                  "destinationAddressPrefixes",
                  "protocol",
                  "sourcePortRange",
                  "sourcePortRanges",
                  "destinationPortRange",
                  "destinationPortRanges"
                ],
                "defaultSnippets": [
                  {
                    "label": "New Security Rule",
                    "description": "Creates a new Security Rule template",
                    "body": {
                      "direction": "${1|inbound,outbound|}",
                      "priority": "^$2",
                      "name": "$3",
                      "description": "$4",
                      "access": "${5|allow,deny|}",
                      "protocol": "${6|tcp,udp,*|}",
                      "sourceAddressPrefix": "$7",
                      "sourceAddressPrefixes": "^$8",
                      "destinationAddressPrefix": "$9",
                      "destinationAddressPrefixes": "^$10",
                      "sourcePortRange": "*",
                      "sourcePortRanges": [],
                      "destinationPortRange": "$11",
                      "destinationPortRanges": "^$12"
                    }
                  }
                ],
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "securityRules"
      ]
    },
    "functions": {
        "type": "array",
        "items": {
            "$ref": "#/definitions/functionNamespace"
        },
        "description": "User defined functions"
    },
    "resources": {
        "type": "array",
        "description": "Collection of resources to be deployed",
        "items": {
            "allOf": [
                {
                    "$ref": "#/definitions/resourceBase"
                }
            ]
        }
    },
    "outputs": {
        "type": "object",
        "description": "Output parameter definitions",
        "additionalProperties": {
            "$ref": "#/definitions/output"
        }
    }
  },
  "required": [
    "$schema",
    "contentVersion",
    "parameters",
    "variables",
    "resources"
  ],
  "additionalProperties": false,
  "definitions": {
      "ARMResourceBase": {
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "Name of the resource"
              },
              "type": {
                  "type": "string",
                  "description": "Resource type"
              },
              "condition": {
                  "oneOf": [
                      {
                          "type": "boolean"
                      },
                      {
                          "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                      }
                  ],
                  "description": "Condition of the resource"
              },
              "apiVersion": {
                  "type": "string",
                  "description": "API Version of the resource type, optional when apiProfile is used on the template"
              },
              "dependsOn": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "description": "Collection of resources this resource depends on"
              }
          },
          "required": [
              "name",
              "type"
          ]
      },
      "proxyResourceBase": {
          "allOf": [
              {
                  "$ref": "#/definitions/ARMResourceBase"
              },
              {
                  "properties": {
                      "location": {
                          "$ref": "#/definitions/resourceLocations",
                          "description": "Location to deploy resource to"
                      }
                  }
              }
          ]
      },
      "resourceBase": {
          "allOf": [
              {
                  "$ref": "#/definitions/ARMResourceBase"
              },
              {
                  "properties": {
                      "location": {
                          "$ref": "#/definitions/resourceLocations",
                          "description": "Location to deploy resource to"
                      },
                      "tags": {
                          "type": "object",
                          "description": "Name-value pairs to add to the resource"
                      },
                      "copy": {
                          "$ref": "#/definitions/resourceCopy"
                      },
                      "scope": {
                          "type": "string",
                          "description": "Scope property to be used to provide scope for a resource or to be used to specify a scope for Management Group or Tenant level deployments."
                      },
                      "comments": {
                          "type": "string"
                      }
                  }
              }
          ]
      },
      "resourceBaseExternal": {
          "$ref": "#/definitions/resourceBase",
          "required": [
              "plan"
          ]
      },
      "resourceSku": {
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "Name of the sku"
              },
              "tier": {
                  "type": "string",
                  "description": "Tier of the sku"
              },
              "size": {
                  "type": "string",
                  "description": "Size of the sku"
              },
              "family": {
                  "type": "string",
                  "description": "Family of the sku"
              },
              "capacity": {
                  "type": "integer",
                  "description": "Capacity of the sku"
              }
          },
          "required": [
              "name"
          ]
      },
      "resourceCopy": {
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "Name of the copy"
              },
              "count": {
                  "oneOf": [
                      {
                          "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                      },
                      {
                          "type": "integer"
                      }
                  ],
                  "description": "Count of the copy"
              },
              "mode": {
                  "type": "string",
                  "enum": [
                      "Parallel",
                      "Serial"
                  ],
                  "description": "The copy mode"
              },
              "batchSize": {
                  "oneOf": [
                      {
                          "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                      },
                      {
                          "type": "integer"
                      }
                  ],
                  "description": "The serial copy batch size"
              }
          }
      },
      "resourceKind": {
          "type": "string",
          "maxLength": 64,
          "pattern": "(^[a-zA-Z0-9_.()-]+$)",
          "description": "Kind of resource"
      },
      "resourcePlan": {
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "description": "Name of the plan"
              },
              "promotionCode": {
                  "type": "string",
                  "description": "Plan promotion code"
              },
              "publisher": {
                  "type": "string",
                  "description": "Name of the publisher"
              },
              "product": {
                  "type": "string",
                  "description": "Name of the product"
              },
              "version": {
                  "type": "string",
                  "description": "Version of the product"
              }
          },
          "required": [
              "name"
          ],
          "description": "Plan of the resource"
      },
      "resourceLocations": {
          "type": "string"
      },
      "functionNamespace": {
          "type": "object",
          "properties": {
              "namespace": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Function namespace"
              },
              "members": {
                  "type": "object",
                  "additionalProperties": {
                      "$ref": "#/definitions/functionMember"
                  },
                  "description": "Function memebers"
              }
          }
      },
      "functionMember": {
          "type": "object",
          "properties": {
              "parameters": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/functionParameter"
                  },
                  "description": "Function parameters"
              },
              "output": {
                  "$ref": "#/definitions/functionOutput",
                  "description": "Function output"
              }
          }
      },
      "functionParameter": {
          "type": "object",
          "properties": {
              "name": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Function parameter name"
              },
              "type": {
                  "$ref": "#/definitions/parameterTypes",
                  "description": "Type of function parameter value"
              }
          }
      },
      "functionOutput": {
          "type": "object",
          "properties": {
              "type": {
                  "$ref": "#/definitions/parameterTypes",
                  "description": "Type of function output value"
              },
              "value": {
                  "$ref": "#/definitions/parameterValueTypes",
                  "description": "Value assigned for function output"
              }
          }
      },
      "parameter": {
          "type": "object",
          "properties": {
              "type": {
                  "$ref": "#/definitions/parameterTypes",
                  "description": "Type of input parameter"
              },
              "defaultValue": {
                  "$ref": "#/definitions/parameterValueTypes",
                  "description": "Default value to be used if one is not provided"
              },
              "allowedValues": {
                  "type": "array",
                  "description": "Value can only be one of these values"
              },
              "metadata": {
                  "type": "object",
                  "description": "Metadata for the parameter, can be any valid JSON object"
              },
              "minValue": {
                  "type": "integer",
                  "description": "Minimum value for the int type parameter"
              },
              "maxValue": {
                  "type": "integer",
                  "description": "Maximum value for the int type parameter"
              },
              "minLength": {
                  "type": "integer",
                  "description": "Minimum length for the string or array type parameter"
              },
              "maxLength": {
                  "type": "integer",
                  "description": "Maximum length for the string or array type parameter"
              }
          },
          "required": [
              "type"
          ],
          "description": "Input parameter definitions"
      },
      "output": {
          "type": "object",
          "properties": {
              "type": {
                  "$ref": "#/definitions/parameterTypes",
                  "description": "Type of output value"
              },
              "value": {
                  "$ref": "#/definitions/parameterValueTypes",
                  "description": "Value assigned for output"
              }
          },
          "required": [
              "type",
              "value"
          ],
          "description": "Set of output parameters"
      },
      "parameterTypes": {
          "enum": [
              "string",
              "securestring",
              "int",
              "bool",
              "object",
              "secureObject",
              "array"
          ]
      },
      "parameterValueTypes": {
          "type": [
              "string",
              "boolean",
              "integer",
              "number",
              "object",
              "array",
              "null"
          ]
      },
      "keyVaultReference": {
          "type": "object",
          "properties": {
              "keyVault": {
                  "type": "object",
                  "properties": {
                      "id": {
                          "type": "string",
                          "minLength": 1
                      }
                  },
                  "required": [
                      "id"
                  ],
                  "additionalProperties": false
              },
              "secretName": {
                  "type": "string",
                  "minLength": 1
              },
              "secretVersion": {
                  "type": "string",
                  "minLength": 1
              }
          },
          "required": [
              "keyVault",
              "secretName"
          ],
          "additionalProperties": false
      }
  }
}